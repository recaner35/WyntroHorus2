name: Horus Firmware Derle ve Yayınla

on:
  push:
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  derle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Depoyu Çek

      - name: Satır Sonlarını LF’ye Dönüştür
        run: |
          echo "Dosya satır sonları LF’ye dönüştürülüyor..."
          if [ -f WyntroHorus2.ino ]; then
            sed -i 's/\r$//' WyntroHorus2.ino
          else
            echo "Hata: WyntroHorus2.ino bulunamadı, satır sonu dönüştürmesi atlandı."
          fi

      - name: Arduino CLI’yi Kur
        uses: arduino/setup-arduino-cli@v1

      - name: ESP32 Platformunu Kur
        run: |
          echo "ESP32 platformu kuruluyor..."
          arduino-cli core update-index
          arduino-cli core install esp32:esp32@3.3.0

      - name: Kütüphaneleri Kur
        run: |
          echo "Kütüphaneler kuruluyor..."
          arduino-cli lib install "WebSockets@2.6.1"
          arduino-cli lib install "ArduinoJson@7.4.2"

# LittleFS dosya sistemini oluştur
      - name: Create LittleFS Filesystem
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip
          wget https://github.com/earlephilhower/mklittlefs/releases/download/4.0.2/x86_64-linux-gnu-mklittlefs-db0513a.tar.gz
          tar -xzf x86_64-linux-gnu-mklittlefs-db0513a.tar.gz
          ls -la  # Çıkarılan dosyaları listele
          sudo mv x86_64-linux-gnu-mklittlefs-db0513a/mklittlefs /usr/local/bin/ || sudo mv mklittlefs /usr/local/bin/
          sudo chmod +x /usr/local/bin/mklittlefs
          mklittlefs -c data/ -s 1500000 filesystem.bin0 filesystem.bin

      - name: Firmware Sürümünü Çıkar ve Artır
        run: |
          echo "Dosya varlığı kontrol ediliyor..."
          if [ ! -f WyntroHorus2.ino ]; then
            echo "Hata: WyntroHorus2.ino dosyası bulunamadı!"
            exit 1
          fi
          echo "WyntroHorus2.ino içeriği kontrol ediliyor..."
          cat WyntroHorus2.ino | grep 'FIRMWARE_VERSION'
          echo "grep komutu çalışıyor..."
          VERSION=$(grep -E 'FIRMWARE_VERSION = "v([0-9]+\.[0-9]+\.[0-9]+)";' WyntroHorus2.ino | sed -E 's/.*"v([0-9]+\.[0-9]+\.[0-9]+)".*/\1/')
          echo "grep çıktısı: VERSION=$VERSION"
          if [ -z "$VERSION" ]; then
            echo "Hata: FIRMWARE_VERSION bulunamadı veya format yanlış!"
            echo "Beklenen format: const char* FIRMWARE_VERSION = \"vX.Y.Z\";"
            echo "Bulunan satırlar:"
            grep 'FIRMWARE_VERSION' WyntroHorus2.ino || echo "Hiçbir eşleşme bulunamadı"
            echo "Dosya içeriği:"
            cat WyntroHorus2.ino
            exit 1
          fi
          echo "Mevcut sürüm: v$VERSION"
          IFS='.' read -r -a PARTS <<< "$VERSION"
          if [ ${#PARTS[@]} -ne 3 ]; then
            echo "Hata: Sürüm formatı vX.Y.Z olmalı, bulunan: v$VERSION"
            exit 1
          fi
          PATCH=$((PARTS[2] + 1))
          NEW_VERSION="v${PARTS[0]}.${PARTS[1]}.$PATCH"
          echo "Yeni sürüm: $NEW_VERSION"
          sed -i "s/const char\* FIRMWARE_VERSION = \"v[0-9.]*\";/const char\* FIRMWARE_VERSION = \"$NEW_VERSION\";/" WyntroHorus2.ino
          echo "Dosya değişikliği kontrol ediliyor..."
          if git diff --exit-code WyntroHorus2.ino; then
            echo "Uyarı: WyntroHorus2.ino’da değişiklik yok, commit atlanıyor."
            echo "FIRMWARE_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          else
            echo "FIRMWARE_VERSION=$NEW_VERSION" >> $GITHUB_ENV
            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"
            git add WyntroHorus2.ino
            git commit -m "Firmware sürümü $NEW_VERSION’a yükseltildi"
          fi

      - name: Kodu Derle
        run: |
          echo "Kod derleniyor..."
          arduino-cli compile --fqbn esp32:esp32:esp32 --build-path ./build WyntroHorus2.ino

      - name: Derleme Çıktısını Kontrol Et
        run: |
          echo "Derleme dizini içeriği:"
          ls -la ./build

      - name: Binary Dosyasını Yeniden Adlandır
        run: |
          echo "Binary dosyası yeniden adlandırılıyor..."
          if [ -f ./build/WyntroHorus2.ino.bin ]; then
            mv ./build/WyntroHorus2.ino.bin ./build/wyntrohorus2-${{ env.FIRMWARE_VERSION }}.bin
          else
            echo "Hata: Binary dosyası bulunamadı!"
            ls -la ./build
            exit 1
          fi

      - name: Yeni Sürümü GitHub’a Yükle
        uses: softprops/action-gh-release@v1
        with:
          files: ./build/wyntrohorus2-${{ env.FIRMWARE_VERSION }}.bin
          tag_name: ${{ env.FIRMWARE_VERSION }}
          body: |
            Yeni firmware sürümü: ${{ env.FIRMWARE_VERSION }}
            - Otomatik derleme ve OTA desteği
            - WiFi tarama ve motor kontrolü iyileştirmeleri

      - name: Binary'yi Pages için Hazırla
        run: |
          mkdir -p public
          BIN_FILE=firmware-${{ env.FIRMWARE_VERSION }}.bin
          cp ./build/wyntrohorus2-${{ env.FIRMWARE_VERSION }}.bin public/$BIN_FILE

          # version.json oluştur
          echo "{\"version\":\"${{ env.FIRMWARE_VERSION }}\", \"bin\":\"firmware-${{ env.FIRMWARE_VERSION }}.bin\"}" > public/version.json

          # index.html oluştur
          echo "<!DOCTYPE html>" > public/index.html
          echo "<html lang='en'>" >> public/index.html
          echo "<head>" >> public/index.html
          echo "  <meta charset='UTF-8'>" >> public/index.html
          echo "  <title>Horus Firmware</title>" >> public/index.html
          echo "</head>" >> public/index.html
          echo "<body>" >> public/index.html
          echo "  <h1>Horus Firmware</h1>" >> public/index.html
          echo "  <ul>" >> public/index.html
          echo "    <li><a href=\"$BIN_FILE\">$BIN_FILE</a></li>" >> public/index.html
          echo "  </ul>" >> public/index.html
          echo "</body>" >> public/index.html
          echo "</html>" >> public/index.html

      - name: Pages Artifact Yükle
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: derle
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
